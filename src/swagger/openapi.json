{
    "openapi": "2.0.0",
    "info": {
        "title": "Google Keep",
        "description": "This is the replica of google keep.User can register and login, user can do request for forgot password and he can reset password using that shared credentionals. User can login and perform note CRUD."
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/"
        }
    ],
    "tags": [
        {
            "name": "Google keep using express CLI",
            "description": "This is the replica of google keep"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Register user...",
                "requestBody": {
                    "description": "Register user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "Register new name"
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "User login",
                "requestBody": {
                    "description": "User login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/login"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "Logged in Successfully ðŸš€ðŸš€ðŸš€",
                        "content": {}
                    },
                    "404": {
                        "description": "Invalid Email or Password.",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "login user"
            }
        },
        "/users/forget_pwd": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Forget password",
                "requestBody": {
                    "description": "Forget Password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgetPassword"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Password reset token generated",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "Forget Password"
            }
        },
        "/users/reset_pwd": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "reset password for User",
                "requestBody": {
                    "description": "new password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "x-codegen-request-body-name": "new password"
            }
        },
        "/notes/": {
                "tags": [
                    "Notes"
                ],
                "summary": "Create a note for User",
                "requestBody": {
                    "description": "create note",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Note"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "description": "Created the note",
                        "content": {}
                    },
                    "400": {
                        "description": "Note creation failed",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "x-codegen-request-body-name": "create note"
            }
        },
        "/notes/findNote/{_id}": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get a single note by it's id",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched the note",
                        "content": {}
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {}
                    },
                    "400": {
                        "description": "Finding note failed",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
        "/notes/updateNote/{_id}": {
                "tags": [
                    "Notes"
                ],
                "summary": "Update a note for User",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update note",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Note"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Updated the note",
                        "content": {}
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {}
                    },
                    "400": {
                        "description": "Update failed",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "x-codegen-request-body-name": "update note"
            },
        "/notes/delNote/{_id}": {
                "tags": [
                    "Notes"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the note",
                        "content": {}
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {}
                    },
                    "400": {
                        "description": "Deletion failed",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/notes/allNotes": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get all Notes",
                "responses": {
                    "200": {
                        "description": "Fetched the notes",
                        "content": {}
                    },
                    "404": {
                        "description": "No notes found",
                        "content": {}
                    },
                    "400": {
                        "description": "Failed to retrieve notes",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
        "/notes/isArchive/{_id}": {
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Archieve a note for User",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Archived the note",
                        "content": {}
                    },
                    "400": {
                        "description": "Failed to archive note",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/notes/isTrash/{_id}": {
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Send a note to trash",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted the note",
                        "content": {}
                    },
                    "400": {
                        "description": "Note deletion failed",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "emailId": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "login": {
                "type": "object",
                "properties": {
                    "emailId": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "ForgetPassword": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "ResetPassword": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Note": {
                "type": "object",
                "properties": {
                    "Title": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Color": {
                        "type": "string"
                    },
                    "isArchived": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "UserID": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWT": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "x-original-swagger-version": "2.0"
}